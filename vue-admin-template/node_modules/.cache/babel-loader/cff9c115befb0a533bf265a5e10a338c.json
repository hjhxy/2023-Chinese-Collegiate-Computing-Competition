{"remainingRequest":"E:\\aproject\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\aproject\\vue-admin-template\\src\\views\\map\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\aproject\\vue-admin-template\\src\\views\\map\\index.vue","mtime":1682697547796},{"path":"E:\\aproject\\vue-admin-template\\babel.config.js","mtime":1680534710653},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680534835386},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1680534836652},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680534835386},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1680534837350}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKaW1wb3J0IGRldmljZU1peGluIGZyb20gJ0AvbWl4aW5zL2RldmljZSc7CmltcG9ydCB7IGdldExpc3QgfSBmcm9tICdAL2FwaS9jaGVja2xpc3QnOwpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbZGV2aWNlTWl4aW5dLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hKaW5nd2VpOiAnJywKICAgICAgaW5mb1dpbmRvd1Nob3c6IGZhbHNlLAogICAgICBsb25naXR1ZGU6ICcnLAogICAgICBsYXRpdHVkZTogJycsCiAgICAgIHBvaW50OiAnJywKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGRpYWxvZ0ltYWdlVXJsOiAnJywKICAgICAgdmFsdWU6IHsKICAgICAgICB1cmw6ICcvZGV2LWFwaS9zdGF0aWMvaW1nL3Rlc3RyZXMuanBnJywKICAgICAgICBtb2RlbHVybDogJy9kZXYtYXBpL3N0YXRpYy9yZXNJbWcvdGVzdHJlcy5qcGcnCiAgICAgIH0sCiAgICAgIG1hcERhdGFMaXN0OiBbXSwKICAgICAgY2hhcnQ6IG51bGwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0Q2hhcnQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKG5hbWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIGdldExpc3QoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLm1hcERhdGFMaXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtcy5zbGljZSgwLCAzKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCfojrflj5bmlbDmja7plJnor68nKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Zyw5Zu+5Yid5aeL5YyWCiAgICBtYXBSZWFkeTogZnVuY3Rpb24gbWFwUmVhZHkoX3JlZikgewogICAgICB2YXIgQk1hcCA9IF9yZWYuQk1hcCwKICAgICAgICBtYXAgPSBfcmVmLm1hcDsKICAgICAgLy8g6YCJ5oup5LiA5Liq57uP57qs5bqm5L2c5Li65Lit5b+D54K5CiAgICAgIHRoaXMucG9pbnQgPSBuZXcgQk1hcC5Qb2ludCgxMTMuMjcsIDIzLjEzKTsKICAgICAgbWFwLmNlbnRlckFuZFpvb20odGhpcy5wb2ludCwgMTIpOwogICAgICB0aGlzLkJNYXAgPSBCTWFwOwogICAgICB0aGlzLm1hcCA9IG1hcDsKICAgIH0sCiAgICAvLyDngrnlh7vojrflj5bnu4/nuqzluqYKICAgIGdldExvY2F0aW9uOiBmdW5jdGlvbiBnZXRMb2NhdGlvbihlKSB7CiAgICAgIHRoaXMubG9uZ2l0dWRlID0gZS5wb2ludC5sbmc7CiAgICAgIHRoaXMubGF0aXR1ZGUgPSBlLnBvaW50LmxhdDsKICAgICAgdGhpcy5pbmZvV2luZG93U2hvdyA9IHRydWU7CiAgICAgIHRoaXMuZmV0Y2hEYXRhKCk7CiAgICB9LAogICAgZ2V0QmFpZHVNYXBQb2ludDogZnVuY3Rpb24gZ2V0QmFpZHVNYXBQb2ludCgpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgbXlHZW8gPSBuZXcgdGhpcy5CTWFwLkdlb2NvZGVyKCk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VhcmNoSmluZ3dlaSk7CiAgICAgIG15R2VvLmdldFBvaW50KHRoaXMuc2VhcmNoSmluZ3dlaSwgZnVuY3Rpb24gKHBvaW50KSB7CiAgICAgICAgaWYgKHBvaW50KSB7CiAgICAgICAgICB0aGF0Lm1hcC5jZW50ZXJBbmRab29tKHBvaW50LCAxNSk7CiAgICAgICAgICB0aGF0LmxhdGl0dWRlID0gcG9pbnQubGF0OwogICAgICAgICAgdGhhdC5sb25naXR1ZGUgPSBwb2ludC5sbmc7CiAgICAgICAgICB0aGF0LmluZm9XaW5kb3dTaG93ID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOS/oeaBr+eql+WPo+WFs+mXrQogICAgaW5mb1dpbmRvd0Nsb3NlOiBmdW5jdGlvbiBpbmZvV2luZG93Q2xvc2UoKSB7CiAgICAgIHRoaXMubGF0aXR1ZGUgPSAnJzsKICAgICAgdGhpcy5sb25naXR1ZGUgPSAnJzsKICAgICAgdGhpcy5pbmZvV2luZG93U2hvdyA9IGZhbHNlOwogICAgfSwKICAgIGhhbmRsZVBpY3R1cmVDYXJkUHJldmlldzogZnVuY3Rpb24gaGFuZGxlUGljdHVyZUNhcmRQcmV2aWV3KHVybCkgewogICAgICB0aGlzLmRpYWxvZ0ltYWdlVXJsID0gdXJsOwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIG9wZW5JbWc6IGZ1bmN0aW9uIG9wZW5JbWcoKSB7CiAgICAgIHdpbmRvdy5vcGVuKHRoaXMuZGlhbG9nSW1hZ2VVcmwpOwogICAgfSwKICAgIGluaXRDaGFydDogZnVuY3Rpb24gaW5pdENoYXJ0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdGhpcy5jaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFzZS1lY2hhcnQnKSk7CiAgICAgIHRoaXMuY2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGRhdGE6IFsnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnLCAnU3VuJ10KICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBkYXRhOiBbMTUwLCAyMzAsIDIyNCwgMjE4LCAxMzUsIDE0NywgMjYwXSwKICAgICAgICAgIHR5cGU6ICdsaW5lJwogICAgICAgIH1dCiAgICAgIH0pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5jaGFydC5yZXNpemUoKTsKICAgICAgICBfdGhpczIuY2hhcnQyLnJlc2l6ZSgpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["echarts","deviceMixin","getList","mixins","data","searchJingwei","infoWindowShow","longitude","latitude","point","dialogVisible","dialogImageUrl","value","url","modelurl","mapDataList","chart","mounted","initChart","methods","fetchData","name","_this","listLoading","then","response","items","slice","catch","console","log","mapReady","_ref","BMap","map","Point","centerAndZoom","getLocation","e","lng","lat","getBaiduMapPoint","that","myGeo","Geocoder","getPoint","infoWindowClose","handlePictureCardPreview","openImg","window","open","_this2","init","document","getElementById","setOption","xAxis","type","yAxis","series","addEventListener","resize","chart2"],"sources":["src/views/map/index.vue"],"sourcesContent":["<template>\n  <div class=\"camera_root\">\n    <el-card :style=\"{height:screenHeight+'px'}\">\n      <baidu-map\n        id=\"allmap\"\n        :style=\"{display:'flex','flex-direction': 'column-reverse',width: '100%',height:(screenHeight-50)+'px'}\"\n        :scroll-wheel-zoom=\"true\"\n        @ready=\"mapReady\"\n        @click=\"getLocation\"\n      >\n        <el-divider />\n        <div style=\"display:flex;justify-content:center;margin-bottom: 5px\">\n          <bm-auto-complete v-model=\"searchJingwei\" :sug-style=\"{zIndex: 999999}\">\n            <el-input v-model=\"searchJingwei\" style=\"width:300px;margin-right:15px\" placeholder=\"输入地址\" />\n          </bm-auto-complete>\n          <el-button type=\"primary\" @click=\"getBaiduMapPoint\">搜索</el-button>\n        </div>\n        <bm-map-type :map-types=\"['BMAP_NORMAL_MAP', 'BMAP_HYBRID_MAP']\" anchor=\"BMAP_ANCHOR_TOP_LEFT\" />\n        <bm-marker v-if=\"infoWindowShow\" :position=\"{lng: longitude, lat: latitude}\">\n          <bm-label content=\"\" :label-style=\"{color: 'red', fontSize : '24px'}\" :offset=\"{width: -35, height: 30}\" />\n        </bm-marker>\n        <bm-info-window style=\"height: 200px;overflow: auto\" :position=\"{lng: longitude, lat: latitude}\" :show=\"infoWindowShow\" @clickclose=\"infoWindowClose\">\n          <img class=\"srcimg\" :src=\"value.url\" title=\"点击预览\" @click=\"handlePictureCardPreview(value.url)\">\n          <img class=\"modelimg\" :src=\"value.modelurl\" title=\"点击预览\" @click=\"handlePictureCardPreview(value.modelurl)\">\n          <div>纬度:{{ this.latitude }}</div>\n          <div>经度:{{ this.longitude }}</div>\n        </bm-info-window>\n      </baidu-map>\n    </el-card>\n    <!--  单条道路质量评估报告  -->\n    <el-card :style=\"{height:screenHeight+'px',display: 'flex','flex-direction':'column',overflow:'auto'}\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>道路检测报告</span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\">报告导出</el-button>\n      </div>\n      <!--   表格   -->\n      <el-divider>数据集</el-divider>\n      <el-table\n        :data=\"mapDataList\"\n        style=\"width: 100%\">\n        <el-table-column\n          prop=\"user_id\"\n          label=\"用户\">\n        </el-table-column>\n        <el-table-column\n          prop=\"check_type\"\n          label=\"检测类型\">\n        </el-table-column>\n        <el-table-column\n          prop=\"check_time\"\n          label=\"检测时间\">\n        </el-table-column>\n      </el-table>\n      <!--  echarts -->\n      <el-divider>可视化</el-divider>\n      <div\n        id=\"base-echart\"\n        class=\"base-echart\"\n        style=\"width: 100%;height: 300px\"\n      />\n    </el-card>\n\n    <el-dialog :visible.sync=\"dialogVisible\">\n      <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\" title=\"点击在新窗口预览\" @click=\"openImg\">\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport deviceMixin from '@/mixins/device'\nimport { getList } from '@/api/checklist'\nexport default {\n  mixins: [deviceMixin],\n  data() {\n    return {\n      searchJingwei: '',\n      infoWindowShow: false,\n      longitude: '',\n      latitude: '',\n      point: '',\n      dialogVisible: false,\n      dialogImageUrl: '',\n      value: {\n        url: '/dev-api/static/img/testres.jpg',\n        modelurl: '/dev-api/static/resImg/testres.jpg'\n      },\n      mapDataList: [],\n      chart: null\n    }\n  },\n  mounted() {\n    this.initChart()\n  },\n  methods: {\n    fetchData(name) {\n      this.listLoading = true\n      getList().then(response => {\n        this.mapDataList = response.data.items.slice(0, 3)\n      }).catch(() => {\n        console.log('获取数据错误')\n      })\n    },\n    // 地图初始化\n    mapReady({ BMap, map }) {\n      // 选择一个经纬度作为中心点\n      this.point = new BMap.Point(113.27, 23.13)\n      map.centerAndZoom(this.point, 12)\n      this.BMap = BMap\n      this.map = map\n    },\n    // 点击获取经纬度\n    getLocation(e) {\n      this.longitude = e.point.lng\n      this.latitude = e.point.lat\n      this.infoWindowShow = true\n      this.fetchData()\n    },\n    getBaiduMapPoint() {\n      const that = this\n      const myGeo = new this.BMap.Geocoder()\n      console.log(this.searchJingwei)\n      myGeo.getPoint(this.searchJingwei, function(point) {\n        if (point) {\n          that.map.centerAndZoom(point, 15)\n          that.latitude = point.lat\n          that.longitude = point.lng\n          that.infoWindowShow = true\n        }\n      })\n    },\n    // 信息窗口关闭\n    infoWindowClose() {\n      this.latitude = ''\n      this.longitude = ''\n      this.infoWindowShow = false\n    },\n\n    handlePictureCardPreview(url) {\n      this.dialogImageUrl = url\n      this.dialogVisible = true\n    },\n    openImg() {\n      window.open(this.dialogImageUrl)\n    },\n    initChart() {\n      this.chart = echarts.init(document.getElementById('base-echart'))\n      this.chart.setOption({\n        xAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: [150, 230, 224, 218, 135, 147, 260],\n            type: 'line'\n          }\n        ]\n      })\n      window.addEventListener('resize', () => {\n        this.chart.resize()\n        this.chart2.resize()\n      })\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.camera_root{\n  height: 500px;\n  display: flex;\n\n  .el-card:nth-of-type(1){\n    flex: 2;\n    margin: 0px 10px;\n  }\n  .el-card:nth-of-type(2){\n    flex: 1;\n  }\n\n  .imgs {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    img {\n      width: 50%;\n    }\n    img:nth-child(1){\n      margin-right: 10px;\n    }\n  }\n\n  .bm-view{\n    width: 100%;\n    height: 100%;\n  }\n  #allmap{\n    height: 450px;\n    width: 100%;\n    margin: 10px 0;\n  }\n  .srcimg ,.modelimg{\n    width: 100%;\n    height: 80%;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,YAAAA,OAAA;AACA,OAAAC,WAAA;AACA,SAAAC,OAAA;AACA;EACAC,MAAA,GAAAF,WAAA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MACAC,cAAA;MACAC,SAAA;MACAC,QAAA;MACAC,KAAA;MACAC,aAAA;MACAC,cAAA;MACAC,KAAA;QACAC,GAAA;QACAC,QAAA;MACA;MACAC,WAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAC,SAAA,WAAAA,UAAAC,IAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,WAAA;MACArB,OAAA,GAAAsB,IAAA,WAAAC,QAAA;QACAH,KAAA,CAAAP,WAAA,GAAAU,QAAA,CAAArB,IAAA,CAAAsB,KAAA,CAAAC,KAAA;MACA,GAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA;MACA;IACA;IACA;IACAC,QAAA,WAAAA,SAAAC,IAAA;MAAA,IAAAC,IAAA,GAAAD,IAAA,CAAAC,IAAA;QAAAC,GAAA,GAAAF,IAAA,CAAAE,GAAA;MACA;MACA,KAAAzB,KAAA,OAAAwB,IAAA,CAAAE,KAAA;MACAD,GAAA,CAAAE,aAAA,MAAA3B,KAAA;MACA,KAAAwB,IAAA,GAAAA,IAAA;MACA,KAAAC,GAAA,GAAAA,GAAA;IACA;IACA;IACAG,WAAA,WAAAA,YAAAC,CAAA;MACA,KAAA/B,SAAA,GAAA+B,CAAA,CAAA7B,KAAA,CAAA8B,GAAA;MACA,KAAA/B,QAAA,GAAA8B,CAAA,CAAA7B,KAAA,CAAA+B,GAAA;MACA,KAAAlC,cAAA;MACA,KAAAc,SAAA;IACA;IACAqB,gBAAA,WAAAA,iBAAA;MACA,IAAAC,IAAA;MACA,IAAAC,KAAA,YAAAV,IAAA,CAAAW,QAAA;MACAf,OAAA,CAAAC,GAAA,MAAAzB,aAAA;MACAsC,KAAA,CAAAE,QAAA,MAAAxC,aAAA,YAAAI,KAAA;QACA,IAAAA,KAAA;UACAiC,IAAA,CAAAR,GAAA,CAAAE,aAAA,CAAA3B,KAAA;UACAiC,IAAA,CAAAlC,QAAA,GAAAC,KAAA,CAAA+B,GAAA;UACAE,IAAA,CAAAnC,SAAA,GAAAE,KAAA,CAAA8B,GAAA;UACAG,IAAA,CAAApC,cAAA;QACA;MACA;IACA;IACA;IACAwC,eAAA,WAAAA,gBAAA;MACA,KAAAtC,QAAA;MACA,KAAAD,SAAA;MACA,KAAAD,cAAA;IACA;IAEAyC,wBAAA,WAAAA,yBAAAlC,GAAA;MACA,KAAAF,cAAA,GAAAE,GAAA;MACA,KAAAH,aAAA;IACA;IACAsC,OAAA,WAAAA,QAAA;MACAC,MAAA,CAAAC,IAAA,MAAAvC,cAAA;IACA;IACAO,SAAA,WAAAA,UAAA;MAAA,IAAAiC,MAAA;MACA,KAAAnC,KAAA,GAAAhB,OAAA,CAAAoD,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,KAAAtC,KAAA,CAAAuC,SAAA;QACAC,KAAA;UACAC,IAAA;UACArD,IAAA;QACA;QACAsD,KAAA;UACAD,IAAA;QACA;QACAE,MAAA,GACA;UACAvD,IAAA;UACAqD,IAAA;QACA;MAEA;MACAR,MAAA,CAAAW,gBAAA;QACAT,MAAA,CAAAnC,KAAA,CAAA6C,MAAA;QACAV,MAAA,CAAAW,MAAA,CAAAD,MAAA;MACA;IACA;EACA;AACA"}]}