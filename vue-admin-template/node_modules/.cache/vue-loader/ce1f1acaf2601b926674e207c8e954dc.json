{"remainingRequest":"E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\aproject\\vue-admin-template\\src\\views\\photo\\index.vue?vue&type=template&id=7c0c3c0b&scoped=true&","dependencies":[{"path":"E:\\aproject\\vue-admin-template\\src\\views\\photo\\index.vue","mtime":1683209240305},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683245853943},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1683245856080},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683245853943},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1683245855646}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}