{"remainingRequest":"E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\aproject\\vue-admin-template\\src\\views\\index\\photo\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\aproject\\vue-admin-template\\src\\views\\index\\photo\\index.vue","mtime":1682429517197},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680534835386},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1680534836652},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680534835386},{"path":"E:\\aproject\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1680534837350}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkZXZpY2VNaXhpbiBmcm9tICdAL21peGlucy9kZXZpY2UnCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQaG90bycsCiAgbWl4aW5zOiBbZGV2aWNlTWl4aW5dLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkaWFsb2dJbWc6IHt9LAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgaW1nbGlzdDogW10sCiAgICAgIHRva2VuOiAnJwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMudG9rZW4gPSBnZXRUb2tlbigpCiAgfSwKICBtZXRob2RzOiB7CiAgICBoYW5kbGVSZW1vdmU6IGZ1bmN0aW9uKGZpbGUsIGZpbGVMaXN0KSB7CiAgICB9LAogICAgaGFuZGxlUGljdHVyZUNhcmRQcmV2aWV3KGZpbGUpIHsKICAgICAgdGhpcy5kaWFsb2dJbWcgPSBmaWxlCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgIH0sCiAgICBoYW5kbGVTdWNjZXNzKHJlcywgZmlsZSwgZmlsZWxpc3QpIHsKICAgICAgcmVzLnVybCA9ICcvZGV2LWFwaScgKyByZXMudXJsCiAgICAgIHRoaXMuaW1nbGlzdC5wdXNoKHJlcykKICAgIH0sCiAgICBvcGVuSW1nKCkgewogICAgICB3aW5kb3cub3Blbih0aGlzLmRpYWxvZ0ltZy51cmwpCiAgICB9LAogICAgY2xlYXJNb2RlbCgpIHsKICAgICAgdGhpcy4kcmVmcy51cGxvYWQuY2xlYXJGaWxlcygpCiAgICAgIHRoaXMuaW1nbGlzdCA9IFtdCiAgICB9LAogICAgZG93bkxvYWRNb2RlbCgpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmltZ2xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCB1cmxuYW1lID0gdGhpcy5pbWdsaXN0W2ldLnVybC5zcGxpdCgnLycpCiAgICAgICAgY29uc3QgZmlsZW5hbWUgPSB1cmxuYW1lW3VybG5hbWUubGVuZ3RoIC0gMV0KICAgICAgICBjb25zdCB1cmwgPSAnaHR0cDovLzEyNy4wLjAuMTozMDAxJyArIHRoaXMuaW1nbGlzdFtpXS51cmwuc3BsaXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSkuam9pbignJykKICAgICAgICB0aGlzLmRvd25sb2FkUGljKHVybCwgZmlsZW5hbWUpCiAgICAgIH0KICAgIH0sCiAgICAvKiDlm77niYfnmoTkuIvovb0qLwogICAgZG93bmxvYWRQaWModXJsLCBmaWxlbmFtZSkgewogICAgICBjb25zdCBpbWdzcmMgPSB1cmwKICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKQogICAgICAvLyDop6PlhrPot6jln59jYW52YXPmsaHmn5Ppl67popgKICAgICAgaW1hZ2Uuc2V0QXR0cmlidXRlKCdjcm9zc09yaWdpbicsICdhbm9ueW1vdXMnKQogICAgICBpbWFnZS5vbmxvYWQgPSBmdW5jdGlvbigpIHsKICAgICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKQogICAgICAgIGNhbnZhcy53aWR0aCA9IGltYWdlLndpZHRoCiAgICAgICAgY2FudmFzLmhlaWdodCA9IGltYWdlLmhlaWdodAogICAgICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKQogICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGltYWdlLCAwLCAwLCBpbWFnZS53aWR0aCwgaW1hZ2UuaGVpZ2h0KQogICAgICAgIGNvbnN0IHVybCA9IGNhbnZhcy50b0RhdGFVUkwoJ2ltYWdlL3BuZycpIC8vIOW+l+WIsOWbvueJh+eahGJhc2U2NOe8lueggeaVsOaNrgogICAgICAgIGNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJykKICAgICAgICBhLmRvd25sb2FkID0gZmlsZW5hbWUKICAgICAgICBhLmhyZWYgPSB1cmwKICAgICAgICBhLmNsaWNrKCkKICAgICAgfQogICAgICBpbWFnZS5zcmMgPSBpbWdzcmMKICAgIH0KCiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"index.vue","sourceRoot":"src/views/index/photo","sourcesContent":["<template>\n  <div>\n    <div class=\"original_img\">\n      <el-upload\n        ref=\"upload\"\n        action=\"/dev-api/uploadimg\"\n        list-type=\"picture-card\"\n        multiple\n        :limit=\"8\"\n        :on-preview=\"handlePictureCardPreview\"\n        :on-remove=\"handleRemove\"\n        :on-success=\"handleSuccess\"\n      >\n        <i class=\"el-icon-plus\" />\n      </el-upload>\n      <el-dialog v-if=\"dialogVisible\" :visible.sync=\"dialogVisible\">\n        <img width=\"100%\" :src=\"dialogImg.url\" alt=\"\" title=\"点击在新窗口预览\" @click=\"openImg\">\n        <div><b>纬度：</b>{{ dialogImg.propties.Latitude }}</div>\n        <div><b>经度：</b>{{ dialogImg.propties.Longitude }}</div>\n        <div><b>详细地址：</b>{{ dialogImg.propties.Address[0] }}</div>\n        <div><b>拍摄时间：</b>{{ dialogImg.propties.Time_taken }}</div>\n      </el-dialog>\n    </div>\n\n    <div class=\"buttons\" style=\"height: 40px\">\n      <el-button type=\"primary\" style=\"float: right;margin-left: 10px\" icon=\"el-icon-download\" @click=\"clearModel\">清空记录</el-button>\n      <el-button type=\"primary\" style=\"float: right\" icon=\"el-icon-download\" @click=\"downLoadModel\">一键下载模型</el-button>\n    </div>\n\n    <el-divider content-position=\"left\">模型检测结果</el-divider>\n\n    <div v-show=\"imglist.length\" class=\"new_img\">\n      <img v-for=\"(item,index) in imglist\" :key=\"index\" :src=\"item.url\" title=\"预览\" alt=\"预览\" @click=\"handlePictureCardPreview(item)\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport deviceMixin from '@/mixins/device'\nimport { getToken } from '@/utils/auth'\n\nexport default {\n  name: 'Photo',\n  mixins: [deviceMixin],\n  data() {\n    return {\n      dialogImg: {},\n      dialogVisible: false,\n      imglist: [],\n      token: ''\n    }\n  },\n  mounted() {\n    this.token = getToken()\n  },\n  methods: {\n    handleRemove: function(file, fileList) {\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImg = file\n      this.dialogVisible = true\n    },\n    handleSuccess(res, file, filelist) {\n      res.url = '/dev-api' + res.url\n      this.imglist.push(res)\n    },\n    openImg() {\n      window.open(this.dialogImg.url)\n    },\n    clearModel() {\n      this.$refs.upload.clearFiles()\n      this.imglist = []\n    },\n    downLoadModel() {\n      for (let i = 0; i < this.imglist.length; i++) {\n        const urlname = this.imglist[i].url.split('/')\n        const filename = urlname[urlname.length - 1]\n        const url = 'http://127.0.0.1:3001' + this.imglist[i].url.split(process.env.VUE_APP_BASE_API).join('')\n        this.downloadPic(url, filename)\n      }\n    },\n    /* 图片的下载*/\n    downloadPic(url, filename) {\n      const imgsrc = url\n      const image = new Image()\n      // 解决跨域canvas污染问题\n      image.setAttribute('crossOrigin', 'anonymous')\n      image.onload = function() {\n        const canvas = document.createElement('canvas')\n        canvas.width = image.width\n        canvas.height = image.height\n        const context = canvas.getContext('2d')\n        context.drawImage(image, 0, 0, image.width, image.height)\n        const url = canvas.toDataURL('image/png') // 得到图片的base64编码数据\n        const a = document.createElement('a')\n        a.download = filename\n        a.href = url\n        a.click()\n      }\n      image.src = imgsrc\n    }\n\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.original_img{\n\n}\n\n.new_img{\n  img {\n    width: 146px;\n    height: 146px;\n    margin: 0px 4px;\n    &:hover {\n      cursor: pointer;\n      transform: scale(1.1);\n      transition: 0.5s;\n    }\n  }\n}\n\n</style>\n"]}]}